using System;
using MongoDB.Bson.Serialization.Attributes;
using MongoDB.Bson;
using HolidayBooking.Vacation;

namespace HolidayBooking.VacationService.Model
{
    public class Vacation
    {
        public enum VacationStatus
        {
            Pending,
            Approved,
            Declined,
            AwaitingFurtherDetails
        }
        public Vacation()
        {
        }

        [BsonId]
        // standard BSonId generated by MongoDb
        public ObjectId InternalId { get; set; }

        // external ID or key, which may be easier to reference (ex: 1,2,3 etc.)
        public string Id { get; set; }

        public int EmployeeId { get; set; }
        public VacationPeriod VacationPeriod { get; set; }
        public VacationStatus Status { get; set; }
        public int ApprovedBy { get; set; }
        public DateTime ChangedOn { get; set; }

        public static Model.Vacation.VacationStatus MapStatus(HolidayBooking.Vacation.Contract.Vacation.ValueObject.Status status)
        {
            Model.Vacation.VacationStatus returnStatus = Model.Vacation.VacationStatus.Pending;

            switch (status)
            {
                case HolidayBooking.Vacation.Contract.Vacation.ValueObject.Status.Approved:
                    returnStatus = Model.Vacation.VacationStatus.Approved;
                    break;

                case HolidayBooking.Vacation.Contract.Vacation.ValueObject.Status.AwaitingFurtherDetails:
                    returnStatus = Model.Vacation.VacationStatus.AwaitingFurtherDetails;
                    break;
                case HolidayBooking.Vacation.Contract.Vacation.ValueObject.Status.Declined:
                    returnStatus = Model.Vacation.VacationStatus.Declined;
                    break;
                default:
                    returnStatus = Model.Vacation.VacationStatus.Pending;
                    break;
            }
            return returnStatus;
        }

    }//class
}//ns
